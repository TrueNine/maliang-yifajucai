services:
  postgres:
    image: postgres:16-alpine
    container_name: maliang-postgres
    environment:
      POSTGRES_DB: ${PG_DB:-maliang}
      POSTGRES_USER: ${PG_USER:-postgres}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-postgres}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${PG_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER:-postgres} -d ${PG_DB:-maliang}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - maliang-network

  redis:
    image: redis:7-alpine
    container_name: maliang-redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis123}
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123} --appendonly yes
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - maliang-network

  minio:
    image: minio/minio:latest
    container_name: maliang-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD:-minio123}
      MINIO_CONSOLE_ADDRESS: ":9001"
    command: server /data --console-address ":9001"
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - maliang-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  maliang-network:
    driver: bridge
