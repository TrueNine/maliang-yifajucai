version: "3.9"

services:
  minio:
    image: minio/minio:RELEASE.2025-06-13T11-33-47Z-cpuv1
    container_name: minio
    restart: always
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_ADMIN_PORT:-9001}:9001"
    environment:
      MINIO_ROOT_USER: '${MINIO_USER}'
      MINIO_ROOT_PASSWORD: '${MINIO_PASSWORD}'
      MINIO_SERVER_URL: "http://${GLOBAL_IP}:9000"
      MINIO_COMPRESS: "on"
      MINIO_COMPRESS_EXTENSIONS: ".pdf,.doc,.docx,.xls,.xlsx,.txt,.log,.csv,.json,.xml,.png,.jpg,.jpeg"
      MINIO_COMPRESS_MIME_TYPES: "application/pdf,application/json,application/xml,image/png,image/jpg,image/jpeg"
    command: server --console-address ':9001' /data
    volumes:
      - /opt/dl/minio/data:/data
  api:
    container_name: api
    build:
      context: ./ms-playwright
      dockerfile: Dockerfile
    restart: always
    working_dir: /app
    volumes:
      - /opt/dl/java:/app
      - /opt/dl/.env:/app/.env
      - /opt/dl/ms-playwright:/ms-playwright
    command:
      [
        'java',
        '-jar',
        '/app/${JAR_NAME}',
        '--spring.profiles.active=${SPRING_PROFILE:-default}',
        '--add-opens java.base/sun.reflect.annotation=ALL-UNNAMED'
      ]
    ports:
      - "${JAVA_PORT:-8080}:8080"
    env_file:
      - ./.env
    environment:
      JVM_VERSION: '${JVM_V}'
      PLAYWRIGHT_VERSION: '${PLAYWRIGHT_V}'
  caddy:
    image: caddy:2.8.4-alpine
    container_name: caddy
    ports:
      - "${CADDY_HTTP_PORT:-80}:80"
      - "${CADDY_HTTPS_PORT:-443}:443"
    volumes:
      - /opt/dl/caddy/html:/srv
      - /opt/dl/caddy/Caddyfile:/etc/caddy/Caddyfile
      - /opt/dl/caddy/data:/data
      - /opt/dl/caddy/config:/config
    restart: always
    environment:
      TZ: ${TZ:-Asia/Shanghai}
    depends_on:
      - minio
      - postgres
      - api
  redis:
    image: redis:7.4.5-alpine3.21
    container_name: redis
    restart: always
    volumes:
      - /opt/dl/redis/redis.conf:/redis.conf
      - /opt/dl/redis/data:/data
    command: [
      "redis-server",
      '/redis.conf',
      '--port 6379',
      '--requirepass ${REDIS_PASSWORD}',
    ]
    ports:
      - "${REDIS_PORT:-6379}:6379"
  postgres:
    image: postgres:17.5-alpine3.22
    container_name: postgres
    restart: always
    ports:
      - "${PG_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: '${PG_DB}'
      POSTGRES_USER: '${PG_USER}'
      POSTGRES_PASSWORD: '${PG_PASSWORD}'
    volumes:
      - /opt/dl/postgres/data:/var/lib/postgresql/data
