version: "3.9"

services:
  minio:
    image: minio/minio:${MINIO_V}
    container_name: minio
    restart: always
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_ADMIN_PORT:-9001}:9001"
    environment:
      MINIO_ROOT_USER: '${MINIO_USER}'
      MINIO_ROOT_PASSWORD: '${MINIO_PASSWORD}'
      MINIO_SERVER_URL: "http://${GLOBAL_IP}:9000"
      MINIO_COMPRESS: "on"
      MINIO_COMPRESS_EXTENSIONS: ".pdf,.doc,.docx,.xls,.xlsx,.txt,.log,.csv,.json,.xml,.png,.jpg,.jpeg"
      MINIO_COMPRESS_MIME_TYPES: "application/pdf,application/json,application/xml,image/png,image/jpg,image/jpeg"
    command: server --console-address ':9001' /data
    volumes:
      - /opt/dl/minio/data:/data
  api:
    container_name: api
    build:
      context: ./ms-playwright
      dockerfile: Dockerfile
    restart: always
    working_dir: /app
    volumes:
      - /opt/dl/java:/app
      - /opt/dl/.env:/app/.env
      - /opt/dl/ms-playwright:/ms-playwright
    command:
      [
        'java',
        '-jar',
        '/app/${JAR_NAME}',
        '--spring.profiles.active=${SPRING_PROFILE:-default}',
        '--add-opens java.base/sun.reflect.annotation=ALL-UNNAMED'
      ]
    ports:
      - "${JAVA_PORT:-8080}:8080"
    env_file:
      - ./.env
    environment:
      JVM_VERSION: '${JVM_V}'
      PLAYWRIGHT_VERSION: '${PLAYWRIGHT_V}'
  nginx:
    image:
      nginx:${NGINX_V}
    container_name: nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - /etc/letsencrypt/archive:/etc/nginx/conf.d/cert:ro
      - /opt/dl/nginx/html:/etc/nginx/html
      - /opt/dl/nginx/conf.d/nginx.conf:/etc/nginx/conf.d/default.conf
      - /opt/dl/nginx/mime.types:/etc/nginx/mime.types:ro
      - /opt/dl/nginx/.logs:/var/log/nginx
    restart: always
    environment:
      TZ:
    depends_on:
      - minio
      - postgres
  redis:
    image:
      redis:${REDIS_V}
    container_name: redis
    restart: always
    volumes:
      - /opt/dl/redis/redis.conf:/redis.conf
      - /opt/dl/redis/data:/data
    command: [
      "redis-server",
      '/redis.conf',
      '--port 6379',
      '--requirepass ${REDIS_PASSWORD}',
    ]
    ports:
      - "${REDIS_PORT:-6379}:6379"
  postgres:
    image: postgres:${POSTGRES_V}
    container_name: postgres
    restart: always
    ports:
      - "${PG_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: '${PG_DB}'
      POSTGRES_USER: '${PG_USER}'
      POSTGRES_PASSWORD: '${PG_PASSWORD}'
    volumes:
      - /opt/dl/postgres/data:/var/lib/postgresql/data
